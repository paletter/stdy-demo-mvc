<beans xmlns="http://www.springframework.org/schema/beans"  
 xmlns:context="http://www.springframework.org/schema/context"  
 xmlns:p="http://www.springframework.org/schema/p"  
 xmlns:mvc="http://www.springframework.org/schema/mvc"  
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
 xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context.xsd  
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- mvc-3.0 not support <mvc:exclude-mapping> configuration -->
    <!-- mvc-3.2 support <mvc:exclude-mapping> configuration -->

	<!-- start spring annotation -->
	<mvc:annotation-driven/>      
	
    <!-- start spring scan, scan annotation to bean -->
    <context:component-scan base-package="com.demo" />
  	
  	<!-- spring interceptors -->
  	<mvc:interceptors>
  		<mvc:interceptor>
  			<mvc:mapping path="/**"/>
  			<mvc:exclude-mapping path="/anyone*"/>
  			<bean class="com.demo.demo_mvc.interceptor.MyInterceptor"></bean>
  		</mvc:interceptor>
  	</mvc:interceptors>
  	
  	<!-- ContentNegotitingViewResolver -->
  	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
  	
		<!-- 解析器的执行顺序，如果有多个的话 -->  	
  		<property name="order" value="1"></property>
  		
  		<!-- 默认的数据返回格式，如果所有的mediaType都没匹配上，就会使用defaultContentType -->
		<property name="defaultContentType" value="text/html" />
		
		<!-- 这里是是否启用扩展名支持，默认就是true -->
		<!-- 例如  /user/{userid}.json -->
		<property name="favorPathExtension" value="true"></property>
		
		<!-- 这里是是否启用参数支持，默认就是true -->
		<!-- 例如  /user/{userid}?format=json -->
		<property name="favorParameter" value="false"></property>
		
		<!-- 这里是否忽略掉accept header，默认就是false -->
		<!-- 例如     GET /user HTTP/1.1 -->
		<!-- Accept:application/json -->
		<property name="ignoreAcceptHeader" value="true"></property>
		
		<!-- 这里是扩展名到mimeType的映射 -->
		<!-- 例如 /user/{userid}.json中的".json"就会映射到"application/json" -->
		<!-- ContentNegotiatingViewResolver是根据客户提交的MimeType(如 text/html,application/xml)来跟服务端的一组viewResover的MimeType相比较,如果符合,即返回viewResover的数据 -->
		<property name="mediaTypes">
           <map>
              <entry key="json" value="application/json" />
              <entry key="xml" value="application/xml"/>                     
          </map>
		</property>
		
		<property name="defaultViews">
			<list>
				<!-- json view -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"></bean>
				<!-- xml view -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
                            <property name="classesToBeBound">
                                <list>
                                    <value>com.demo.demo_mvc.entity.User</value>
                                </list>
                            </property>
                        </bean>
                    </constructor-arg>
                </bean>
			</list>		
		</property>
  	</bean>
  	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
		<property name="order" value="2" />
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".html" />
	</bean>
  	
</beans>